<?php

/**
 * @template TIn of mixed
 * @template TReturn of mixed
 *
 * @param array<TIn> $one
 * @param callable(TReturn, TIn): TReturn $two
 * @param TReturn $three
 *
 * @return TReturn
 */
function array_reduce(
	array $one,
	callable $two,
	$three = null
) {}

/**
 * @template T of mixed
 *
 * @param array<T> $one
 * @param callable(T, T): int $two
 */
function uasort(
    array &$one,
    callable $two
): bool {}

/**
 * @template T of mixed
 *
 * @param array<T> $one
 * @param callable(T, T): int $two
 */
function usort(
    array &$one,
    callable $two
): bool {}

/**
 * @template T of array-key
 *
 * @param array<T, mixed> $one
 * @param callable(T, T): int $two
 */
function uksort(
    array &$one,
    callable $two
): bool {}

/**
 * @template T of mixed
 *
 * @param array<T> $one
 * @param array<T> $two
 * @param callable(T, T): int<-1, 1> $three
 */
function array_udiff(
    array $one,
    array $two,
    callable $three
): int {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TK, TK): int<-1, 1> $three
 * @return array<TK, TV>
 */
function array_diff_uassoc(
    array $one,
    array $two,
    callable $three
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TK, TK): int<-1, 1> $three
 * @return array<TK, TV>
 */
function array_diff_ukey(
    array $one,
    array $two,
    callable $three
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TK, TK): int<-1, 1> $three
 * @return array<TK, TV>
 */
function array_intersect_uassoc(
    array $one,
    array $two,
    callable $three
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TK, TK): int<-1, 1> $three
 *
 * @return array<TK, TV>
 */
function array_intersect_ukey(
    array $one,
    array $two,
    callable $three
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TV, TV): int<-1, 1> $three
 *
 * @return array<TK, TV>
 */
function array_udiff_assoc(
    array $one,
    array $two,
    callable $three
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TV, TV): int<-1, 1> $three
 * @param callable(TK, TK): int<-1, 1> $four
 * @return array<TK, TV>
 */
function array_udiff_uassoc(
    array $one,
    array $two,
    callable $three,
    callable $four
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TV, TV): int<-1, 1> $three
 * @return array<TK, TV>
 */
function array_uintersect_assoc(
    array $one,
    array $two,
    callable $three,
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TV, TV): int<-1, 1> $three
 * @param callable(TK, TK): int<-1, 1> $four
 * @return array<TK, TV>
 */
function array_uintersect_uassoc(
    array $one,
    array $two,
    callable $three,
    callable $four
): array {}

/**
 * @template TK of mixed
 * @template TV of mixed
 *
 * @param array<TK, TV> $one
 * @param array<TK, TV> $two
 * @param callable(TV, TV): int<-1, 1> $three
 * @return array<TK, TV>
 */
function array_uintersect(
    array $one,
    array $two,
    callable $three,
): array {}
